// Package v1 Code generated by swaggo/swag. DO NOT EDIT
package v1

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/exchanges/{exchange}/pairs/{pair}/order-book": {
            "get": {
                "description": "Retrieves the order book for a specific exchange and pair.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderBook"
                ],
                "summary": "Get Order Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exchange name",
                        "name": "exchange",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Currency Pair",
                        "name": "pair",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Book data",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers_v1_orderbook.getOrderBookResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/market-info-storage_internal_controllers_httputils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Order Book not found",
                        "schema": {
                            "$ref": "#/definitions/market-info-storage_internal_controllers_httputils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/market-info-storage_internal_controllers_httputils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Saves an order book for a specific exchange and pair.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderBook"
                ],
                "summary": "Save Order Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exchange name",
                        "name": "exchange",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Currency Pair",
                        "name": "pair",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order Book data",
                        "name": "orderBook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers_v1_orderbook.saveOrderBookRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/market-info-storage_internal_controllers_httputils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/market-info-storage_internal_controllers_httputils.HTTPError"
                        }
                    }
                }
            }
        },
        "/order-history": {
            "get": {
                "description": "Returns a list of orders for the specified client.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderHistory"
                ],
                "summary": "Get order history for a client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client name",
                        "name": "client-name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exchange name",
                        "name": "exchange",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Label",
                        "name": "label",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Currency pair",
                        "name": "pair",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers_v1_orderhistory.getOrderHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid client data",
                        "schema": {
                            "$ref": "#/definitions/market-info-storage_internal_controllers_httputils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/market-info-storage_internal_controllers_httputils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Saves an order.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OrderHistory"
                ],
                "summary": "Save order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client name",
                        "name": "client-name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exchange name",
                        "name": "exchange",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Label",
                        "name": "label",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Currency pair",
                        "name": "pair",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "History order",
                        "name": "history-order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers_v1_orderhistory.saveOrderRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/market-info-storage_internal_controllers_httputils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/market-info-storage_internal_controllers_httputils.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_controllers_v1_orderbook.getOrderBookResponse": {
            "type": "object",
            "properties": {
                "order_book": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/market-info-storage_internal_domain.DepthOrder"
                    }
                }
            }
        },
        "internal_controllers_v1_orderbook.saveOrderBookRequestBody": {
            "type": "object",
            "required": [
                "order_book"
            ],
            "properties": {
                "order_book": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/market-info-storage_internal_domain.DepthOrder"
                    }
                }
            }
        },
        "internal_controllers_v1_orderhistory.HistoryOrderToSave": {
            "type": "object",
            "required": [
                "algorithmNamePlaced",
                "baseQty",
                "commissionQuoteQty",
                "highestBuyPrc",
                "lowestSellPrc",
                "price",
                "side",
                "timePlaced",
                "type"
            ],
            "properties": {
                "algorithmNamePlaced": {
                    "type": "string"
                },
                "baseQty": {
                    "type": "number"
                },
                "commissionQuoteQty": {
                    "type": "number"
                },
                "highestBuyPrc": {
                    "type": "number"
                },
                "lowestSellPrc": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "side": {
                    "type": "string"
                },
                "timePlaced": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "internal_controllers_v1_orderhistory.getOrderHistoryResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/market-info-storage_internal_domain.HistoryOrder"
                    }
                }
            }
        },
        "internal_controllers_v1_orderhistory.saveOrderRequestBody": {
            "type": "object",
            "required": [
                "historyOrder"
            ],
            "properties": {
                "historyOrder": {
                    "$ref": "#/definitions/internal_controllers_v1_orderhistory.HistoryOrderToSave"
                }
            }
        },
        "market-info-storage_internal_controllers_httputils.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "market-info-storage_internal_domain.DepthOrder": {
            "type": "object",
            "properties": {
                "baseQty": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "market-info-storage_internal_domain.HistoryOrder": {
            "type": "object",
            "properties": {
                "algorithmNamePlaced": {
                    "type": "string"
                },
                "baseQty": {
                    "type": "number"
                },
                "clinet": {
                    "type": "string"
                },
                "commissionQuoteQty": {
                    "type": "number"
                },
                "exchangeName": {
                    "type": "string"
                },
                "highestBuyPrc": {
                    "type": "number"
                },
                "label": {
                    "type": "string"
                },
                "lowestSellPrc": {
                    "type": "number"
                },
                "pair": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "side": {
                    "type": "string"
                },
                "timePlaced": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Market info storage",
	Description:      "API to store and retreive market data",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
