// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "market-info-storage/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// OrderBookService is an autogenerated mock type for the OrderBookService type
type OrderBookService struct {
	mock.Mock
}

// GetOrderBook provides a mock function with given fields: exchange_name, pair
func (_m *OrderBookService) GetOrderBook(exchange_name string, pair string) ([]domain.DepthOrder, error) {
	ret := _m.Called(exchange_name, pair)

	var r0 []domain.DepthOrder
	if rf, ok := ret.Get(0).(func(string, string) []domain.DepthOrder); ok {
		r0 = rf(exchange_name, pair)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.DepthOrder)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(exchange_name, pair)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveOrderBook provides a mock function with given fields: exchange_name, pair, orderBook
func (_m *OrderBookService) SaveOrderBook(exchange_name string, pair string, orderBook []domain.DepthOrder) error {
	ret := _m.Called(exchange_name, pair, orderBook)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, []domain.DepthOrder) error); ok {
		r0 = rf(exchange_name, pair, orderBook)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewOrderBookService interface {
	mock.TestingT
	Cleanup(func())
}

// NewOrderBookService creates a new instance of OrderBookService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOrderBookService(t mockConstructorTestingTNewOrderBookService) *OrderBookService {
	mock := &OrderBookService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
